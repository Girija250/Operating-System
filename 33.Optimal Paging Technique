#include <stdio.h>

#define FRAME_COUNT 3

int findOptimal(int frames[], int pages[], int n, int index) {
    int farthest = -1, pos = -1;
    for (int i = 0; i < FRAME_COUNT; i++) {
        int j;
        for (j = index; j < n; j++) if (frames[i] == pages[j]) break;
        if (j == n) return i;
        if (j > farthest) { farthest = j; pos = i; }
    }
    return pos;
}

void optimal(int pages[], int n) {
    int frames[FRAME_COUNT] = {-1}, page_faults = 0;
    for (int i = 0; i < n; i++) {
        int flag = 0;
        for (int j = 0; j < FRAME_COUNT; j++) if (frames[j] == pages[i]) { flag = 1; break; }
        if (!flag) { frames[findOptimal(frames, pages, n, i + 1)] = pages[i]; page_faults++; }
        printf("Frames: "); for (int j = 0; j < FRAME_COUNT; j++) printf("%d ", frames[j]); printf("\n");
    }
    printf("Total page faults: %d\n", page_faults);
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3};
    optimal(pages, sizeof(pages) / sizeof(pages[0]));
    return 0;
}
